 apiVersion: v1
 kind: PersistentVolume
 metadata:
   name: myvolume
 spec:
   capacity:
     storage: 20Gi
   volumeMode: Filesystem
   accessModes:
     - ReadWriteOnce
   hostpath:
     path: /var/www/html

apiVesion: v1
kind: PersistentVolumeClaim
metadata:
  name: myvolume
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi

apiVesion: apps/v1
kind: Deployment
metadata:
  name: pvdeployment
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
    spec:
      volumes:
        - name: myvolume
          PersistentvolumeClaim:
            - claimName: myclaim
                
      containers:
        - name: nginx-deployment
          image: nginx 
          volumeMounts:
            - name: myvolume
              mountPath: /data/nginx

apiVesion: apps/v1
kind: Deployment
metadata:
  name:  nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 3
  template:
    metadata:
      labels:
        app: nginx

    spec:
      volumes:
        - name: myvolome
          hostPath:
            path: /data/usr/
      volumes:
        - name: myvolume
          hostPath:
            path: /usr/data
      containers:
        - name: myvolume
          image: ngnix
          volumeMounts:
            - name: myvolume
              mountPath: /data/user
        - name: myvolume
          image: tomcat
          volumeMounts:
            - name: mymount
              mountPath: /uroer/ldfoer

  PersistentVolumeTemplate:
    metadata:
      name: my persistentvolume
  spec:
    storageClassName: manualy
    volumeMode: Filesystem
    accessModes:
      - ReadWriteOnce
    Resources:
      requests:
        storage: 1Gi

apiVersion: v1
kind: PersistentVolume
metadata: 
  - name: myvolumes
spec:
